<?xml version="1.0"?>
<ruleset name="Live Admin Styler Coding Standards">
    <description>Coding standards for Live Admin Styler v2.0</description>

    <!-- Files to check -->
    <file>includes</file>
    <file>live-admin-styler.php</file>

    <!-- Exclude patterns -->
    <exclude-pattern>*/node_modules/*</exclude-pattern>
    <exclude-pattern>*/vendor/*</exclude-pattern>
    <exclude-pattern>*/tests/*</exclude-pattern>
    <exclude-pattern>*/docs/*</exclude-pattern>
    <exclude-pattern>*.min.js</exclude-pattern>
    <exclude-pattern>*.min.css</exclude-pattern>

    <!-- WordPress Coding Standards -->
    <rule ref="WordPress">
        <!-- Allow short array syntax -->
        <exclude name="Generic.Arrays.DisallowShortArraySyntax"/>
        
        <!-- Allow camelCase for JavaScript interop -->
        <exclude name="WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase"/>
        
        <!-- Allow multiple assignments for performance -->
        <exclude name="Squiz.PHP.DisallowMultipleAssignments"/>
        
        <!-- Allow inline comments for complex logic -->
        <exclude name="Squiz.Commenting.InlineComment"/>
    </rule>

    <!-- WordPress Extra Standards -->
    <rule ref="WordPress-Extra">
        <!-- Exclude VIP rules that don't apply to regular plugins -->
        <exclude name="WordPress.VIP"/>
    </rule>

    <!-- WordPress Documentation Standards -->
    <rule ref="WordPress-Docs"/>

    <!-- Additional PHP Standards -->
    <rule ref="PSR2">
        <!-- Exclude conflicting rules -->
        <exclude name="PSR2.Classes.ClassDeclaration.OpenBraceNewLine"/>
        <exclude name="PSR2.Methods.FunctionDeclaration.OpenBraceNewLine"/>
        <exclude name="PSR2.ControlStructures.ControlStructureSpacing"/>
    </rule>

    <!-- Security Standards -->
    <rule ref="WordPress.Security"/>

    <!-- Performance Standards -->
    <rule ref="WordPress.Performance"/>

    <!-- Custom Rules -->
    <rule ref="Generic.CodeAnalysis.UnusedFunctionParameter"/>
    <rule ref="Generic.CodeAnalysis.EmptyStatement"/>
    <rule ref="Generic.CodeAnalysis.ForLoopShouldBeWhileLoop"/>
    <rule ref="Generic.CodeAnalysis.ForLoopWithTestFunctionCall"/>
    <rule ref="Generic.CodeAnalysis.JumbledIncrementer"/>
    <rule ref="Generic.CodeAnalysis.UnconditionalIfStatement"/>
    <rule ref="Generic.CodeAnalysis.UnnecessaryFinalModifier"/>
    <rule ref="Generic.CodeAnalysis.UselessOverridingMethod"/>

    <!-- Complexity Rules -->
    <rule ref="Generic.Metrics.CyclomaticComplexity">
        <properties>
            <property name="complexity" value="10"/>
            <property name="absoluteComplexity" value="20"/>
        </properties>
    </rule>

    <rule ref="Generic.Metrics.NestingLevel">
        <properties>
            <property name="nestingLevel" value="5"/>
            <property name="absoluteNestingLevel" value="10"/>
        </properties>
    </rule>

    <!-- File Size Limits -->
    <rule ref="Generic.Files.LineLength">
        <properties>
            <property name="lineLimit" value="120"/>
            <property name="absoluteLineLimit" value="150"/>
        </properties>
    </rule>

    <!-- Naming Conventions -->
    <rule ref="Generic.NamingConventions.UpperCaseConstantName"/>
    <rule ref="Generic.NamingConventions.CamelCapsFunctionName">
        <properties>
            <property name="strict" value="false"/>
        </properties>
    </rule>

    <!-- Documentation Requirements -->
    <rule ref="Generic.Commenting.DocComment"/>
    <rule ref="Squiz.Commenting.FunctionComment">
        <exclude name="Squiz.Commenting.FunctionComment.MissingParamTag"/>
        <exclude name="Squiz.Commenting.FunctionComment.ParamCommentFullStop"/>
    </rule>
    <rule ref="Squiz.Commenting.ClassComment"/>
    <rule ref="Squiz.Commenting.VariableComment"/>

    <!-- Array Standards -->
    <rule ref="Generic.Arrays.DisallowLongArraySyntax"/>

    <!-- String Standards -->
    <rule ref="Squiz.Strings.DoubleQuoteUsage"/>
    <rule ref="Squiz.Strings.ConcatenationSpacing">
        <properties>
            <property name="spacing" value="1"/>
            <property name="ignoreNewlines" value="true"/>
        </properties>
    </rule>

    <!-- Whitespace Standards -->
    <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace"/>
    <rule ref="Generic.WhiteSpace.ScopeIndent">
        <properties>
            <property name="indent" value="4"/>
            <property name="tabIndent" value="true"/>
        </properties>
    </rule>

    <!-- Control Structure Standards -->
    <rule ref="Generic.ControlStructures.InlineControlStructure"/>
    <rule ref="Squiz.ControlStructures.ControlSignature"/>
    <rule ref="Squiz.ControlStructures.ForEachLoopDeclaration"/>
    <rule ref="Squiz.ControlStructures.ForLoopDeclaration"/>
    <rule ref="Squiz.ControlStructures.LowercaseDeclaration"/>

    <!-- Function Standards -->
    <rule ref="Generic.Functions.CallTimePassByReference"/>
    <rule ref="Generic.Functions.FunctionCallArgumentSpacing"/>
    <rule ref="Squiz.Functions.FunctionDeclaration"/>
    <rule ref="Squiz.Functions.FunctionDeclarationArgumentSpacing"/>

    <!-- Class Standards -->
    <rule ref="Generic.Classes.DuplicateClassName"/>
    <rule ref="Squiz.Classes.ClassDeclaration"/>
    <rule ref="Squiz.Classes.LowercaseClassKeywords"/>
    <rule ref="Squiz.Classes.ValidClassName"/>

    <!-- PHP Standards -->
    <rule ref="Generic.PHP.DeprecatedFunctions"/>
    <rule ref="Generic.PHP.DisallowShortOpenTag"/>
    <rule ref="Generic.PHP.ForbiddenFunctions"/>
    <rule ref="Generic.PHP.LowerCaseConstant"/>
    <rule ref="Generic.PHP.LowerCaseKeyword"/>
    <rule ref="Generic.PHP.NoSilencedErrors"/>
    <rule ref="Squiz.PHP.DisallowSizeFunctionsInLoops"/>
    <rule ref="Squiz.PHP.Eval"/>
    <rule ref="Squiz.PHP.GlobalKeyword"/>
    <rule ref="Squiz.PHP.LowercasePHPFunctions"/>
    <rule ref="Squiz.PHP.NonExecutableCode"/>

    <!-- Custom Configuration -->
    <config name="minimum_supported_wp_version" value="6.0"/>
    <config name="testVersion" value="7.4-"/>

    <!-- Show progress -->
    <arg value="p"/>
    
    <!-- Show sniff codes in all reports -->
    <arg value="s"/>
    
    <!-- Use colors in output -->
    <arg name="colors"/>
    
    <!-- Check up to 20 files simultaneously -->
    <arg name="parallel" value="20"/>
    
    <!-- Cache results -->
    <arg name="cache" value=".phpcs-cache"/>
    
    <!-- Extensions to check -->
    <arg name="extensions" value="php"/>
</ruleset>