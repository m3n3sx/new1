(function($){'use strict';class ErrorHandler{constructor(config={}){this.config={enableGlobalHandling: true,enableUserNotifications: true,enableErrorReporting: true,maxErrorsPerSession: 50,reportingEndpoint: lasComm.restUrl+'error-report',notificationDuration: 5000,debugMode: false,...config};this.errorCount=0;this.errorHistory=[];this.notificationQueue=[];this.isInitialized=false;this.init();}init(){if(this.isInitialized){return;}if(this.config.enableGlobalHandling){this.setupGlobalHandlers();}this.setupNotificationSystem();this.bindEvents();this.isInitialized=true;this.log('ErrorHandler initialized','info');}setupGlobalHandlers(){window.addEventListener('error',(event)=>{this.handleError({type: 'javascript',message: event.message,filename: event.filename,lineno: event.lineno,colno: event.colno,error: event.error,stack: event.error ? event.error.stack : null});});window.addEventListener('unhandledrejection',(event)=>{this.handleError({type: 'promise',message: event.reason ? event.reason.toString(): 'Unhandled promise rejection',promise: event.promise,reason: event.reason,stack: event.reason && event.reason.stack ? event.reason.stack : null});});$(document).ajaxError((event,xhr,settings,error)=>{if(settings.url &&(settings.url.includes('las_')|| settings.url.includes('/las/'))){this.handleAjaxError(xhr,settings,error);}});const originalConsoleError=console.error;console.error=(...args)=>{this.handleConsoleError(args);originalConsoleError.apply(console,args);};}handleError(errorInfo){if(this.errorCount >=this.config.maxErrorsPerSession){return;}this.errorCount++;const error=this.createErrorObject(errorInfo);this.errorHistory.push(error);if(this.errorHistory.length > 100){this.errorHistory=this.errorHistory.slice(-50);}this.log('JavaScript error captured','error',error);if(this.config.enableUserNotifications){this.showErrorNotification(error);}if(this.config.enableErrorReporting){this.reportError(error);}this.emit('error',error);}handleAjaxError(xhr,settings,error){const errorInfo={type: 'ajax',message: error || 'AJAX request failed',url: settings.url,method: settings.type || 'GET',status: xhr.status,statusText: xhr.statusText,responseText: xhr.responseText,timeout: settings.timeout};try{const response=JSON.parse(xhr.responseText);if(response.error){errorInfo.serverError=response.error;errorInfo.message=response.error.message || errorInfo.message;}}catch(e){}this.handleError(errorInfo);}handleConsoleError(args){const message=args.map(arg=>{if(typeof arg==='object'){try{return JSON.stringify(arg);}catch(e){return arg.toString();}}return String(arg);}).join(' ');this.handleError({type: 'console',message: message,args: args});}createErrorObject(errorInfo){const error={id: this.generateErrorId(),timestamp: new Date().toISOString(),type: errorInfo.type || 'unknown',message: errorInfo.message || 'Unknown error',level: this.determineErrorLevel(errorInfo),category: this.determineErrorCategory(errorInfo),url: window.location.href,userAgent: navigator.userAgent,userId: window.lasUser ? window.lasUser.id : null,sessionId: this.getSessionId()};switch(errorInfo.type){case 'javascript': error.filename=errorInfo.filename;error.lineno=errorInfo.lineno;error.colno=errorInfo.colno;error.stack=errorInfo.stack;break;case 'promise': error.reason=errorInfo.reason;error.stack=errorInfo.stack;break;case 'ajax': error.requestUrl=errorInfo.url;error.method=errorInfo.method;error.status=errorInfo.status;error.statusText=errorInfo.statusText;error.responseText=errorInfo.responseText;error.serverError=errorInfo.serverError;break;case 'console': error.args=errorInfo.args;break;}return error;}determineErrorLevel(errorInfo){switch(errorInfo.type){case 'javascript': return 'error';case 'promise': return 'error';case 'ajax': if(errorInfo.status >=500){return 'error';}else if(errorInfo.status >=400){return 'warning';}return 'error';case 'console': return 'warning';default: return 'error';}}determineErrorCategory(errorInfo){switch(errorInfo.type){case 'ajax': return 'network';case 'javascript': case 'promise': case 'console': return 'system';default: return 'system';}}showErrorNotification(error){if(error.level==='debug' || error.level==='info'){return;}const userMessage=this.createUserFriendlyMessage(error);const notification=this.createNotification(userMessage,error.level);this.notificationQueue.push(notification);this.processNotificationQueue();}createUserFriendlyMessage(error){const messages={ajax:{0: 'Network connection error. Please check your internet connection.',400: 'Invalid request. Please refresh the page and try again.',401: 'Authentication error. Please log in again.',403: 'Permission denied. You may not have access to this feature.',404: 'The requested resource was not found.',500: 'Server error. Please try again later.',502: 'Server temporarily unavailable. Please try again later.',503: 'Service temporarily unavailable. Please try again later.'},javascript: 'A JavaScript error occurred. The page may not function correctly.',promise: 'An asynchronous operation failed. Some features may not work properly.',console: 'A system error was logged. This may affect functionality.',default: 'An unexpected error occurred. Please try refreshing the page.'};if(error.type==='ajax' && messages.ajax[error.status]){return messages.ajax[error.status];}return messages[error.type] || messages.default;}createNotification(message,level){const notification={id: 'las-error-notification-'+Date.now(),message: message,level: level,timestamp: Date.now(),element: null};const element=$(` <div id="${notification.id}" class="las-notification las-notification-${level}" style="display: none;"> <div class="las-notification-content"> <span class="las-notification-icon"></span> <span class="las-notification-message">${message}</span> <button class="las-notification-close" type="button">&times;</button> </div> </div> `);element.css({position: 'fixed',top: '32px',right: '20px',zIndex: '999999',maxWidth: '400px',padding: '12px 16px',borderRadius: '4px',boxShadow: '0 2px 8px rgba(0,0,0,0.1)',fontSize: '14px',lineHeight: '1.4'});const levelStyles={error:{backgroundColor: '#f8d7da',borderColor: '#f5c6cb',color: '#721c24'},warning:{backgroundColor: '#fff3cd',borderColor: '#ffeaa7',color: '#856404'},info:{backgroundColor: '#d1ecf1',borderColor: '#bee5eb',color: '#0c5460'}};if(levelStyles[level]){element.css(levelStyles[level]);}element.find('.las-notification-close').on('click',()=>{this.closeNotification(notification);});notification.element=element;return notification;}setupNotificationSystem(){if(!$('#las-notification-container').length){$('body').append('<div id="las-notification-container"></div>');}this.addNotificationStyles();}addNotificationStyles(){if($('#las-error-handler-styles').length){return;}const styles=` <style id="las-error-handler-styles"> .las-notification{border: 1px solid;margin-bottom: 10px;animation: las-notification-slide-in 0.3s ease-out;}.las-notification-content{display: flex;align-items: center;gap: 8px;}.las-notification-message{flex: 1;}.las-notification-close{background: none;border: none;font-size: 18px;cursor: pointer;padding: 0;width: 20px;height: 20px;display: flex;align-items: center;justify-content: center;}.las-notification-close:hover{opacity: 0.7;}@keyframes las-notification-slide-in{from{transform: translateX(100%);opacity: 0;}to{transform: translateX(0);opacity: 1;}}@keyframes las-notification-slide-out{from{transform: translateX(0);opacity: 1;}to{transform: translateX(100%);opacity: 0;}}</style> `;$('head').append(styles);}processNotificationQueue(){if(this.notificationQueue.length===0){return;}const notification=this.notificationQueue.shift();this.showNotification(notification);}showNotification(notification){$('#las-notification-container').append(notification.element);notification.element.slideDown(300);setTimeout(()=>{this.closeNotification(notification);},this.config.notificationDuration);}closeNotification(notification){if(notification.element){notification.element.css('animation','las-notification-slide-out 0.3s ease-in');setTimeout(()=>{notification.element.remove();},300);}}reportError(error){if(this.errorCount >=this.config.maxErrorsPerSession){return;}const errorData={...error,clientInfo:{viewport:{width: window.innerWidth,height: window.innerHeight},screen:{width: screen.width,height: screen.height},memory: performance.memory ?{used: performance.memory.usedJSHeapSize,total: performance.memory.totalJSHeapSize,limit: performance.memory.jsHeapSizeLimit}: null,connection: navigator.connection ?{effectiveType: navigator.connection.effectiveType,downlink: navigator.connection.downlink,rtt: navigator.connection.rtt}: null}};$.ajax({url: this.config.reportingEndpoint,method: 'POST',data: JSON.stringify(errorData),contentType: 'application/json',headers:{'X-WP-Nonce': lasComm.nonces.rest},timeout: 5000}).fail(()=>{this.log('Failed to report error to server','warning');});}bindEvents(){document.addEventListener('visibilitychange',()=>{if(document.hidden){this.onPageHidden();}else{this.onPageVisible();}});window.addEventListener('beforeunload',()=>{this.onPageUnload();});}onPageHidden(){this.notificationQueue=[];}onPageVisible(){}onPageUnload(){if(this.errorHistory.length > 0){if(navigator.sendBeacon){const data=JSON.stringify({type: 'session_summary',errorCount: this.errorCount,errors: this.errorHistory.slice(-10)});navigator.sendBeacon(this.config.reportingEndpoint,data);}}}generateErrorId(){return 'err_'+Date.now()+'_'+Math.random().toString(36).substr(2,9);}getSessionId(){let sessionId=sessionStorage.getItem('las_session_id');if(!sessionId){sessionId='sess_'+Date.now()+'_'+Math.random().toString(36).substr(2,9);sessionStorage.setItem('las_session_id',sessionId);}return sessionId;}log(message,level='info',data=null){if(this.config.debugMode || level==='error'){const logMethod=console[level] || console.log;if(data){logMethod('[LAS ErrorHandler]',message,data);}else{logMethod('[LAS ErrorHandler]',message);}}}emit(event,data){$(document).trigger('las:error:'+event,[data]);}getStatistics(){return{errorCount: this.errorCount,errorHistory: this.errorHistory,notificationQueue: this.notificationQueue.length,sessionId: this.getSessionId(),isInitialized: this.isInitialized};}clearHistory(){this.errorHistory=[];this.errorCount=0;}testErrorHandling(){setTimeout(()=>{throw new Error('Test JavaScript error from ErrorHandler');},100);setTimeout(()=>{Promise.reject(new Error('Test promise rejection from ErrorHandler'));},200);setTimeout(()=>{$.ajax({url: '/non-existent-endpoint',method: 'POST'});},300);}}window.LAS=window.LAS ||{};window.LAS.ErrorHandler=new ErrorHandler(window.lasErrorConfig ||{});$.fn.lasError=function(message,level='error'){window.LAS.ErrorHandler.handleError({type: 'manual',message: message,level: level,element: this[0]});return this;};})(jQuery);