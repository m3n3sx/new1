export default class ThemeManager{constructor(core){this.core=core;this.currentTheme='auto';this.systemTheme='light';this.effectiveTheme='light';this.mediaQuery=null;this.storageKey='las_theme_preference';this.transitionDuration=300;this.init();}init(){this.setupMediaQuery();this.loadThemePreference();this.applyTheme();this.bindEvents();this.core.emit('theme:ready',{current: this.currentTheme,effective: this.effectiveTheme,system: this.systemTheme});}setupMediaQuery(){if(window.matchMedia){this.mediaQuery=window.matchMedia('(prefers-color-scheme: dark)');this.systemTheme=this.mediaQuery.matches ? 'dark' : 'light';this.mediaQuery.addEventListener('change',(e)=>{this.systemTheme=e.matches ? 'dark' : 'light';this.core.emit('theme:system-changed',{theme: this.systemTheme});if(this.currentTheme==='auto'){this.updateEffectiveTheme();}});}}loadThemePreference(){try{const stored=localStorage.getItem(this.storageKey);if(stored && ['auto','light','dark'].includes(stored)){this.currentTheme=stored;}}catch(error){this.core.emit('theme:error',{type: 'storage_load',message: 'Failed to load theme preference',error});}this.updateEffectiveTheme();}saveThemePreference(){try{localStorage.setItem(this.storageKey,this.currentTheme);this.core.emit('theme:preference-saved',{theme: this.currentTheme});}catch(error){this.core.emit('theme:error',{type: 'storage_save',message: 'Failed to save theme preference',error});}}updateEffectiveTheme(){const previousTheme=this.effectiveTheme;if(this.currentTheme==='auto'){this.effectiveTheme=this.systemTheme;}else{this.effectiveTheme=this.currentTheme;}if(previousTheme !==this.effectiveTheme){this.applyTheme();this.core.emit('theme:changed',{from: previousTheme,to: this.effectiveTheme,mode: this.currentTheme});}}applyTheme(){const html=document.documentElement;const body=document.body;html.classList.add('las-theme-transitioning');html.classList.remove('las-theme-light','las-theme-dark','las-theme-auto');body.classList.remove('las-theme-light','las-theme-dark');html.removeAttribute('data-theme');html.classList.add(`las-theme-${this.currentTheme}`);body.classList.add(`las-theme-${this.effectiveTheme}`);html.setAttribute('data-theme',this.effectiveTheme);this.updateThemeVariables();setTimeout(()=>{html.classList.remove('las-theme-transitioning');},this.transitionDuration);this.core.emit('theme:applied',{theme: this.effectiveTheme,mode: this.currentTheme});}updateThemeVariables(){const root=document.documentElement;const isDark=this.effectiveTheme==='dark';const themeColors={light:{'--las-content-background': '#ffffff','--las-content-heading-color': '#23282d','--las-gray-50': '#f9f9f9','--las-gray-100': '#f1f1f1','--las-gray-200': '#e1e1e1','--las-gray-300': '#d1d1d1','--las-gray-400': '#b4b9be','--las-gray-500': '#8c8f94','--las-gray-600': '#646970','--las-gray-700': '#50575e','--las-gray-800': '#3c434a','--las-gray-900': '#1d2327','--las-white': '#ffffff','--las-form-background': '#ffffff','--las-form-border': '#d1d1d1','--las-form-text': '#23282d','--las-button-background': '#ffffff','--las-button-border': '#d1d1d1','--las-button-text': '#50575e','--las-button-hover-background': '#f9f9f9','--las-button-hover-border': '#b4b9be','--las-button-hover-text': '#1d2327'},dark:{'--las-content-background': '#1a1a1a','--las-content-heading-color': '#ffffff','--las-gray-50': '#2a2a2a','--las-gray-100': '#3a3a3a','--las-gray-200': '#4a4a4a','--las-gray-300': '#5a5a5a','--las-gray-400': '#6a6a6a','--las-gray-500': '#7a7a7a','--las-gray-600': '#8a8a8a','--las-gray-700': '#9a9a9a','--las-gray-800': '#aaaaaa','--las-gray-900': '#ffffff','--las-white': '#2a2a2a','--las-form-background': '#2a2a2a','--las-form-border': '#4a4a4a','--las-form-text': '#ffffff','--las-button-background': '#2a2a2a','--las-button-border': '#4a4a4a','--las-button-text': '#9a9a9a','--las-button-hover-background': '#3a3a3a','--las-button-hover-border': '#5a5a5a','--las-button-hover-text': '#ffffff'}};const colors=themeColors[this.effectiveTheme];Object.entries(colors).forEach(([property,value])=>{root.style.setProperty(property,value);});}bindEvents(){this.core.on('theme:toggle',()=>{this.toggleTheme();});this.core.on('theme:set',(data)=>{this.setTheme(data.theme);});this.core.on('settings:changed',(data)=>{if(data.key==='theme_mode'){this.setTheme(data.value);}});}setTheme(theme){if(!['auto','light','dark'].includes(theme)){this.core.emit('theme:error',{type: 'invalid_theme',message: `Invalid theme: ${theme}`,theme});return;}const previousTheme=this.currentTheme;this.currentTheme=theme;this.updateEffectiveTheme();this.saveThemePreference();this.core.emit('theme:mode-changed',{from: previousTheme,to: theme,effective: this.effectiveTheme});}toggleTheme(){let newTheme;if(this.currentTheme==='auto'){newTheme=this.systemTheme==='dark' ? 'light' : 'dark';}else if(this.currentTheme==='light'){newTheme='dark';}else{newTheme='light';}this.setTheme(newTheme);}getThemeInfo(){return{current: this.currentTheme,effective: this.effectiveTheme,system: this.systemTheme,supportsSystemDetection: !!this.mediaQuery};}isDarkMode(){return this.effectiveTheme==='dark';}isLightMode(){return this.effectiveTheme==='light';}isAutoMode(){return this.currentTheme==='auto';}getThemeColor(colorName){const root=document.documentElement;return getComputedStyle(root).getPropertyValue(`--las-${colorName}`).trim();}setThemeColor(colorName,value){const root=document.documentElement;root.style.setProperty(`--las-${colorName}`,value);this.core.emit('theme:color-changed',{color: colorName,value,theme: this.effectiveTheme});}async previewTheme(theme){if(!['light','dark'].includes(theme)){throw new Error(`Invalid preview theme: ${theme}`);}const originalTheme=this.effectiveTheme;this.effectiveTheme=theme;this.applyTheme();this.core.emit('theme:preview-started',{preview: theme,original: originalTheme});return new Promise((resolve)=>{const endPreview=()=>{this.effectiveTheme=originalTheme;this.applyTheme();this.core.emit('theme:preview-ended',{preview: theme,restored: originalTheme});resolve();};setTimeout(endPreview,5000);this.core.once('theme:end-preview',endPreview);});}exportTheme(){const root=document.documentElement;const style=getComputedStyle(root);const themeConfig={mode: this.currentTheme,effective: this.effectiveTheme,colors:{}};const allProps=Array.from(document.styleSheets).flatMap(sheet=>{try{return Array.from(sheet.cssRules);}catch(e){return [];}}).filter(rule=> rule.type===CSSRule.STYLE_RULE).flatMap(rule=> Array.from(rule.style)).filter(prop=> prop.startsWith('--las-')).map(prop=> prop.replace('--las-',''));const uniqueProps=[...new Set(allProps)];uniqueProps.forEach(prop=>{const value=style.getPropertyValue(`--las-${prop}`).trim();if(value){themeConfig.colors[prop]=value;}});return themeConfig;}importTheme(themeConfig){if(!themeConfig || typeof themeConfig !=='object'){throw new Error('Invalid theme configuration');}if(themeConfig.mode && ['auto','light','dark'].includes(themeConfig.mode)){this.setTheme(themeConfig.mode);}if(themeConfig.colors && typeof themeConfig.colors==='object'){Object.entries(themeConfig.colors).forEach(([colorName,value])=>{this.setThemeColor(colorName,value);});}this.core.emit('theme:imported',{config: themeConfig});}destroy(){if(this.mediaQuery){this.mediaQuery.removeEventListener('change',this.handleSystemThemeChange);}const html=document.documentElement;const body=document.body;html.classList.remove('las-theme-light','las-theme-dark','las-theme-auto','las-theme-transitioning');body.classList.remove('las-theme-light','las-theme-dark');html.removeAttribute('data-theme');this.core.emit('theme:destroyed');}}