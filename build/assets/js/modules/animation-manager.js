export default class AnimationManager{constructor(core){this.core=core;this.animations=new Map();this.loadingStates=new Map();this.observers=new Map();this.rafId=null;this.performanceMonitor={frameCount: 0,lastTime: 0,fps: 60,dropped: 0};this.init();}init(){this.setupPerformanceMonitoring();this.setupIntersectionObserver();this.setupReducedMotionDetection();this.core.on('animation-manager:ready',this.render.bind(this));this.core.emit('animation-manager:initialized');}createSpinner(config={}){const{size='medium',variant='circular',color='primary',speed='normal',className=''}=config;const spinner=document.createElement('div');spinner.className=`las-spinner las-spinner-${variant}las-spinner-${size}las-spinner-${speed}las-spinner-${color}${className}`.trim();spinner.setAttribute('role','status');spinner.setAttribute('aria-label','Loading');switch(variant){case 'circular': spinner.innerHTML=` <svg class="las-spinner-svg" viewBox="0 0 50 50"> <circle class="las-spinner-circle" cx="25" cy="25" r="20" fill="none" stroke="currentColor" stroke-width="4" stroke-linecap="round" stroke-dasharray="31.416" stroke-dashoffset="31.416"> <animate attributeName="stroke-dasharray" dur="2s" values="0 31.416;15.708 15.708;0 31.416" repeatCount="indefinite"/> <animate attributeName="stroke-dashoffset" dur="2s" values="0;-15.708;-31.416" repeatCount="indefinite"/> </circle> </svg> `;break;case 'linear': spinner.innerHTML=` <div class="las-spinner-track"> <div class="las-spinner-bar"></div> </div> `;break;case 'dots': spinner.innerHTML=` <div class="las-spinner-dot"></div> <div class="las-spinner-dot"></div> <div class="las-spinner-dot"></div> `;break;case 'pulse': spinner.innerHTML=` <div class="las-spinner-pulse"></div> `;break;}return spinner;}createSkeleton(config={}){const{variant='text',width='100%',height='1em',lines=1,animation='wave',className=''}=config;const skeleton=document.createElement('div');skeleton.className=`las-skeleton las-skeleton-${variant}las-skeleton-${animation}${className}`.trim();skeleton.setAttribute('aria-hidden','true');skeleton.style.width=width;skeleton.style.height=height;if(variant==='text' && lines > 1){skeleton.innerHTML=Array(lines).fill(0).map((_,index)=>{const lineWidth=index===lines-1 ? '60%' : '100%';return `<div class="las-skeleton-line" style="width: ${lineWidth}"></div>`;}).join('');}return skeleton;}createProgressBar(config={}){const{value=0,max=100,variant='linear',size='medium',color='primary',showLabel=false,animated=true,className=''}=config;const progress=document.createElement('div');progress.className=`las-progress las-progress-${variant}las-progress-${size}las-progress-${color}${className}`.trim();progress.setAttribute('role','progressbar');progress.setAttribute('aria-valuemin','0');progress.setAttribute('aria-valuemax',max);progress.setAttribute('aria-valuenow',value);if(variant==='linear'){progress.innerHTML=` <div class="las-progress-track"> <div class="las-progress-bar" style="width: ${(value/max)*100}%"></div> </div> ${showLabel ? `<div class="las-progress-label">${Math.round((value/max)*100)}%</div>` : ''}`;}else if(variant==='circular'){const radius=20;const circumference=2*Math.PI*radius;const strokeDashoffset=circumference-(value/max)*circumference;progress.innerHTML=` <svg class="las-progress-svg" viewBox="0 0 50 50"> <circle class="las-progress-track-circle" cx="25" cy="25" r="${radius}" fill="none" stroke="currentColor" stroke-width="4" opacity="0.2"/> <circle class="las-progress-bar-circle" cx="25" cy="25" r="${radius}" fill="none" stroke="currentColor" stroke-width="4" stroke-linecap="round" stroke-dasharray="${circumference}" stroke-dashoffset="${strokeDashoffset}" transform="rotate(-90 25 25)"/> </svg> ${showLabel ? `<div class="las-progress-label">${Math.round((value/max)*100)}%</div>` : ''}`;}if(animated){progress.classList.add('las-progress-animated');}return progress;}updateProgress(progressElement,value,max=100){const percentage=Math.min(Math.max((value/max)*100,0),100);progressElement.setAttribute('aria-valuenow',value);const bar=progressElement.querySelector('.las-progress-bar');const circle=progressElement.querySelector('.las-progress-bar-circle');const label=progressElement.querySelector('.las-progress-label');if(bar){bar.style.width=`${percentage}%`;}if(circle){const radius=20;const circumference=2*Math.PI*radius;const strokeDashoffset=circumference-(percentage/100)*circumference;circle.style.strokeDashoffset=strokeDashoffset;}if(label){label.textContent=`${Math.round(percentage)}%`;}}createMicroAnimation(element,type,config={}){const animationId=`micro-${Date.now()}-${Math.random().toString(36).substr(2,9)}`;const animation={id: animationId,element,type,config,startTime: null,duration: config.duration || 300,easing: config.easing || 'cubic-bezier(0.2,0,0,1)',onComplete: config.onComplete || null};this.animations.set(animationId,animation);switch(type){case 'bounce': this.animateBounce(animation);break;case 'shake': this.animateShake(animation);break;case 'pulse': this.animatePulse(animation);break;case 'fadeIn': this.animateFadeIn(animation);break;case 'fadeOut': this.animateFadeOut(animation);break;case 'slideIn': this.animateSlideIn(animation);break;case 'slideOut': this.animateSlideOut(animation);break;case 'scale': this.animateScale(animation);break;case 'rotate': this.animateRotate(animation);break;}return animationId;}animateBounce(animation){const{element,duration}=animation;element.style.animation=`las-bounce ${duration}ms cubic-bezier(0.68,-0.55,0.265,1.55)`;setTimeout(()=>{element.style.animation='';this.completeAnimation(animation.id);},duration);}animateShake(animation){const{element,duration}=animation;element.style.animation=`las-shake ${duration}ms ease-in-out`;setTimeout(()=>{element.style.animation='';this.completeAnimation(animation.id);},duration);}animatePulse(animation){const{element,duration,config}=animation;const scale=config.scale || 1.05;element.style.animation=`las-pulse ${duration}ms ease-in-out`;element.style.setProperty('--las-pulse-scale',scale);setTimeout(()=>{element.style.animation='';element.style.removeProperty('--las-pulse-scale');this.completeAnimation(animation.id);},duration);}animateFadeIn(animation){const{element,duration,easing}=animation;element.style.opacity='0';element.style.transition=`opacity ${duration}ms ${easing}`;if(typeof window !=='undefined' && window.requestAnimationFrame){window.requestAnimationFrame(()=>{element.style.opacity='1';});}else{setTimeout(()=>{element.style.opacity='1';},16);}setTimeout(()=>{element.style.transition='';this.completeAnimation(animation.id);},duration);}animateFadeOut(animation){const{element,duration,easing}=animation;element.style.transition=`opacity ${duration}ms ${easing}`;element.style.opacity='0';setTimeout(()=>{element.style.transition='';this.completeAnimation(animation.id);},duration);}animateSlideIn(animation){const{element,duration,easing,config}=animation;const direction=config.direction || 'up';let transform='';switch(direction){case 'up': transform='translateY(20px)';break;case 'down': transform='translateY(-20px)';break;case 'left': transform='translateX(20px)';break;case 'right': transform='translateX(-20px)';break;}element.style.transform=transform;element.style.opacity='0';element.style.transition=`all ${duration}ms ${easing}`;if(typeof window !=='undefined' && window.requestAnimationFrame){window.requestAnimationFrame(()=>{element.style.transform='translate(0)';element.style.opacity='1';});}else{setTimeout(()=>{element.style.transform='translate(0)';element.style.opacity='1';},16);}setTimeout(()=>{element.style.transition='';element.style.transform='';this.completeAnimation(animation.id);},duration);}animateSlideOut(animation){const{element,duration,easing,config}=animation;const direction=config.direction || 'up';let transform='';switch(direction){case 'up': transform='translateY(-20px)';break;case 'down': transform='translateY(20px)';break;case 'left': transform='translateX(-20px)';break;case 'right': transform='translateX(20px)';break;}element.style.transition=`all ${duration}ms ${easing}`;element.style.transform=transform;element.style.opacity='0';setTimeout(()=>{element.style.transition='';this.completeAnimation(animation.id);},duration);}animateScale(animation){const{element,duration,easing,config}=animation;const scale=config.scale || 1.1;element.style.transition=`transform ${duration}ms ${easing}`;element.style.transform=`scale(${scale})`;setTimeout(()=>{element.style.transform='scale(1)';setTimeout(()=>{element.style.transition='';element.style.transform='';this.completeAnimation(animation.id);},duration);},duration/2);}animateRotate(animation){const{element,duration,config}=animation;const degrees=config.degrees || 360;element.style.animation=`las-rotate ${duration}ms linear`;element.style.setProperty('--las-rotate-degrees',`${degrees}deg`);setTimeout(()=>{element.style.animation='';element.style.removeProperty('--las-rotate-degrees');this.completeAnimation(animation.id);},duration);}completeAnimation(animationId){const animation=this.animations.get(animationId);if(!animation)return;if(animation.onComplete){animation.onComplete();}this.animations.delete(animationId);this.core.emit('animation-manager:animation-complete',{animationId});}cancelAnimation(animationId){const animation=this.animations.get(animationId);if(!animation)return;const{element}=animation;element.style.animation='';element.style.transition='';element.style.transform='';element.style.opacity='';this.animations.delete(animationId);this.core.emit('animation-manager:animation-cancelled',{animationId});}setupPerformanceMonitoring(){if(typeof window==='undefined' || !window.requestAnimationFrame)return;const monitor=()=>{const now=(typeof window !=='undefined' && window.performance && window.performance.now)? window.performance.now(): Date.now();this.performanceMonitor.frameCount++;if(now-this.performanceMonitor.lastTime >=1000){this.performanceMonitor.fps=Math.round((this.performanceMonitor.frameCount*1000)/(now-this.performanceMonitor.lastTime));if(this.performanceMonitor.fps < 55){this.performanceMonitor.dropped++;this.core.emit('animation-manager:performance-warning',{fps: this.performanceMonitor.fps,dropped: this.performanceMonitor.dropped});}this.performanceMonitor.frameCount=0;this.performanceMonitor.lastTime=now;}this.rafId=window.requestAnimationFrame(monitor);};this.rafId=window.requestAnimationFrame(monitor);}setupIntersectionObserver(){if(typeof window==='undefined' || !window.IntersectionObserver)return;const observer=new window.IntersectionObserver((entries)=>{entries.forEach(entry=>{if(entry.isIntersecting){const element=entry.target;const animationType=element.getAttribute('data-scroll-animation');if(animationType){this.createMicroAnimation(element,animationType,{duration: 600,onComplete:()=>{element.removeAttribute('data-scroll-animation');observer.unobserve(element);}});}}});},{threshold: 0.1,rootMargin: '50px'});this.observers.set('scroll',observer);}setupReducedMotionDetection(){if(typeof window==='undefined')return;const mediaQuery=window.matchMedia('(prefers-reduced-motion: reduce)');const handleReducedMotion=(e)=>{document.body.classList.toggle('las-reduced-motion',e.matches);if(e.matches){this.animations.forEach((animation,id)=>{this.cancelAnimation(id);});}};mediaQuery.addListener(handleReducedMotion);handleReducedMotion(mediaQuery);}addScrollAnimation(element,animationType){element.setAttribute('data-scroll-animation',animationType);const observer=this.observers.get('scroll');if(observer){observer.observe(element);}}getPerformanceMetrics(){return{fps: this.performanceMonitor.fps,droppedFrames: this.performanceMonitor.dropped,activeAnimations: this.animations.size,loadingStates: this.loadingStates.size};}setLoadingState(element,loading=true,config={}){const elementId=element.getAttribute('data-element-id')|| `element-${Date.now()}`;element.setAttribute('data-element-id',elementId);if(loading){const spinner=this.createSpinner(config);const overlay=document.createElement('div');overlay.className='las-loading-overlay';overlay.appendChild(spinner);element.style.position='relative';element.appendChild(overlay);element.classList.add('las-loading');element.setAttribute('aria-busy','true');this.loadingStates.set(elementId,overlay);}else{const overlay=this.loadingStates.get(elementId);if(overlay){overlay.remove();this.loadingStates.delete(elementId);}element.classList.remove('las-loading');element.setAttribute('aria-busy','false');}}render(){document.querySelectorAll('[data-scroll-animation]').forEach(element=>{const observer=this.observers.get('scroll');if(observer){observer.observe(element);}});}destroy(){this.animations.forEach((animation,id)=>{this.cancelAnimation(id);});this.loadingStates.forEach(overlay=>{overlay.remove();});this.loadingStates.clear();this.observers.forEach(observer=>{observer.disconnect();});this.observers.clear();if(this.rafId && typeof window !=='undefined' && window.cancelAnimationFrame){window.cancelAnimationFrame(this.rafId);this.rafId=null;}this.core.emit('animation-manager:destroyed');}}